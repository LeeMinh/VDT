//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace VDT.AirlineInvoice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VNAWSSoap", Namespace="http://tempuri.org/")]
    public partial class VNAWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Authentication authenticationValueField;
        
        private System.Threading.SendOrPostCallback SearchFlightAutoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchFlightOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchFlightAEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenBookingAutoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPnrByFltOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFltNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPnrHANByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenFullTicketNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestGetPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBookingV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback OtherCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBookingMultiOperationCompleted;
        
        private System.Threading.SendOrPostCallback IssueTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback IssueTicketCAOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenTodayReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenReportByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenFullBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenFullWPPOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VNAWS() {
            this.Url = global::VDT.Properties.Settings.Default.VDT_AirlineInvoice_VNAWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Authentication AuthenticationValue {
            get {
                return this.authenticationValueField;
            }
            set {
                this.authenticationValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SearchFlightAutoCompletedEventHandler SearchFlightAutoCompleted;
        
        /// <remarks/>
        public event SearchFlightCompletedEventHandler SearchFlightCompleted;
        
        /// <remarks/>
        public event SearchFlightAEPCompletedEventHandler SearchFlightAEPCompleted;
        
        /// <remarks/>
        public event OpenBookingAutoCompletedEventHandler OpenBookingAutoCompleted;
        
        /// <remarks/>
        public event GetFlightServiceCompletedEventHandler GetFlightServiceCompleted;
        
        /// <remarks/>
        public event GetAllPnrByFltCompletedEventHandler GetAllPnrByFltCompleted;
        
        /// <remarks/>
        public event CheckConnectionCompletedEventHandler CheckConnectionCompleted;
        
        /// <remarks/>
        public event GetFltNoCompletedEventHandler GetFltNoCompleted;
        
        /// <remarks/>
        public event GetAllPnrHANByDateCompletedEventHandler GetAllPnrHANByDateCompleted;
        
        /// <remarks/>
        public event OpenFullTicketNumberCompletedEventHandler OpenFullTicketNumberCompleted;
        
        /// <remarks/>
        public event TestGetPhoneCompletedEventHandler TestGetPhoneCompleted;
        
        /// <remarks/>
        public event SubmitBookingCompletedEventHandler SubmitBookingCompleted;
        
        /// <remarks/>
        public event SubmitBookingV2CompletedEventHandler SubmitBookingV2Completed;
        
        /// <remarks/>
        public event OtherCommandCompletedEventHandler OtherCommandCompleted;
        
        /// <remarks/>
        public event SubmitBookingMultiCompletedEventHandler SubmitBookingMultiCompleted;
        
        /// <remarks/>
        public event IssueTicketCompletedEventHandler IssueTicketCompleted;
        
        /// <remarks/>
        public event IssueTicketCACompletedEventHandler IssueTicketCACompleted;
        
        /// <remarks/>
        public event CloseReportCompletedEventHandler CloseReportCompleted;
        
        /// <remarks/>
        public event OpenTodayReportCompletedEventHandler OpenTodayReportCompleted;
        
        /// <remarks/>
        public event OpenReportByDateCompletedEventHandler OpenReportByDateCompleted;
        
        /// <remarks/>
        public event VoidTicketCompletedEventHandler VoidTicketCompleted;
        
        /// <remarks/>
        public event OpenFullBookingCompletedEventHandler OpenFullBookingCompleted;
        
        /// <remarks/>
        public event OpenFullWPPCompletedEventHandler OpenFullWPPCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchFlightAuto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FlightVN[] SearchFlightAuto(string Departure, string Destination, string DepartureDate, string loginMode, string ClassMode) {
            object[] results = this.Invoke("SearchFlightAuto", new object[] {
                        Departure,
                        Destination,
                        DepartureDate,
                        loginMode,
                        ClassMode});
            return ((FlightVN[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchFlightAutoAsync(string Departure, string Destination, string DepartureDate, string loginMode, string ClassMode) {
            this.SearchFlightAutoAsync(Departure, Destination, DepartureDate, loginMode, ClassMode, null);
        }
        
        /// <remarks/>
        public void SearchFlightAutoAsync(string Departure, string Destination, string DepartureDate, string loginMode, string ClassMode, object userState) {
            if ((this.SearchFlightAutoOperationCompleted == null)) {
                this.SearchFlightAutoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchFlightAutoOperationCompleted);
            }
            this.InvokeAsync("SearchFlightAuto", new object[] {
                        Departure,
                        Destination,
                        DepartureDate,
                        loginMode,
                        ClassMode}, this.SearchFlightAutoOperationCompleted, userState);
        }
        
        private void OnSearchFlightAutoOperationCompleted(object arg) {
            if ((this.SearchFlightAutoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchFlightAutoCompleted(this, new SearchFlightAutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchFlight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FlightVN[] SearchFlight(string Departure, string Destination, string DepartureDate, int SeatNeed, string loginMode, string ClassMode) {
            object[] results = this.Invoke("SearchFlight", new object[] {
                        Departure,
                        Destination,
                        DepartureDate,
                        SeatNeed,
                        loginMode,
                        ClassMode});
            return ((FlightVN[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchFlightAsync(string Departure, string Destination, string DepartureDate, int SeatNeed, string loginMode, string ClassMode) {
            this.SearchFlightAsync(Departure, Destination, DepartureDate, SeatNeed, loginMode, ClassMode, null);
        }
        
        /// <remarks/>
        public void SearchFlightAsync(string Departure, string Destination, string DepartureDate, int SeatNeed, string loginMode, string ClassMode, object userState) {
            if ((this.SearchFlightOperationCompleted == null)) {
                this.SearchFlightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchFlightOperationCompleted);
            }
            this.InvokeAsync("SearchFlight", new object[] {
                        Departure,
                        Destination,
                        DepartureDate,
                        SeatNeed,
                        loginMode,
                        ClassMode}, this.SearchFlightOperationCompleted, userState);
        }
        
        private void OnSearchFlightOperationCompleted(object arg) {
            if ((this.SearchFlightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchFlightCompleted(this, new SearchFlightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchFlightAEP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FlightVN[] SearchFlightAEP(string Departure, string Destination, string DepartureDate, int SeatNeed, string loginMode, string ClassMode, bool includeAEP) {
            object[] results = this.Invoke("SearchFlightAEP", new object[] {
                        Departure,
                        Destination,
                        DepartureDate,
                        SeatNeed,
                        loginMode,
                        ClassMode,
                        includeAEP});
            return ((FlightVN[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchFlightAEPAsync(string Departure, string Destination, string DepartureDate, int SeatNeed, string loginMode, string ClassMode, bool includeAEP) {
            this.SearchFlightAEPAsync(Departure, Destination, DepartureDate, SeatNeed, loginMode, ClassMode, includeAEP, null);
        }
        
        /// <remarks/>
        public void SearchFlightAEPAsync(string Departure, string Destination, string DepartureDate, int SeatNeed, string loginMode, string ClassMode, bool includeAEP, object userState) {
            if ((this.SearchFlightAEPOperationCompleted == null)) {
                this.SearchFlightAEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchFlightAEPOperationCompleted);
            }
            this.InvokeAsync("SearchFlightAEP", new object[] {
                        Departure,
                        Destination,
                        DepartureDate,
                        SeatNeed,
                        loginMode,
                        ClassMode,
                        includeAEP}, this.SearchFlightAEPOperationCompleted, userState);
        }
        
        private void OnSearchFlightAEPOperationCompleted(object arg) {
            if ((this.SearchFlightAEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchFlightAEPCompleted(this, new SearchFlightAEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenBookingAuto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenBookingAuto(string PNR) {
            object[] results = this.Invoke("OpenBookingAuto", new object[] {
                        PNR});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenBookingAutoAsync(string PNR) {
            this.OpenBookingAutoAsync(PNR, null);
        }
        
        /// <remarks/>
        public void OpenBookingAutoAsync(string PNR, object userState) {
            if ((this.OpenBookingAutoOperationCompleted == null)) {
                this.OpenBookingAutoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenBookingAutoOperationCompleted);
            }
            this.InvokeAsync("OpenBookingAuto", new object[] {
                        PNR}, this.OpenBookingAutoOperationCompleted, userState);
        }
        
        private void OnOpenBookingAutoOperationCompleted(object arg) {
            if ((this.OpenBookingAutoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenBookingAutoCompleted(this, new OpenBookingAutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlightService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFlightService(string flightno, string daycheck) {
            object[] results = this.Invoke("GetFlightService", new object[] {
                        flightno,
                        daycheck});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightServiceAsync(string flightno, string daycheck) {
            this.GetFlightServiceAsync(flightno, daycheck, null);
        }
        
        /// <remarks/>
        public void GetFlightServiceAsync(string flightno, string daycheck, object userState) {
            if ((this.GetFlightServiceOperationCompleted == null)) {
                this.GetFlightServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightServiceOperationCompleted);
            }
            this.InvokeAsync("GetFlightService", new object[] {
                        flightno,
                        daycheck}, this.GetFlightServiceOperationCompleted, userState);
        }
        
        private void OnGetFlightServiceOperationCompleted(object arg) {
            if ((this.GetFlightServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightServiceCompleted(this, new GetFlightServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPnrByFlt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllPnrByFlt(string FltNum, string date, string fromto) {
            object[] results = this.Invoke("GetAllPnrByFlt", new object[] {
                        FltNum,
                        date,
                        fromto});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPnrByFltAsync(string FltNum, string date, string fromto) {
            this.GetAllPnrByFltAsync(FltNum, date, fromto, null);
        }
        
        /// <remarks/>
        public void GetAllPnrByFltAsync(string FltNum, string date, string fromto, object userState) {
            if ((this.GetAllPnrByFltOperationCompleted == null)) {
                this.GetAllPnrByFltOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPnrByFltOperationCompleted);
            }
            this.InvokeAsync("GetAllPnrByFlt", new object[] {
                        FltNum,
                        date,
                        fromto}, this.GetAllPnrByFltOperationCompleted, userState);
        }
        
        private void OnGetAllPnrByFltOperationCompleted(object arg) {
            if ((this.GetAllPnrByFltCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPnrByFltCompleted(this, new GetAllPnrByFltCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckConnection() {
            object[] results = this.Invoke("CheckConnection", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckConnectionAsync() {
            this.CheckConnectionAsync(null);
        }
        
        /// <remarks/>
        public void CheckConnectionAsync(object userState) {
            if ((this.CheckConnectionOperationCompleted == null)) {
                this.CheckConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckConnectionOperationCompleted);
            }
            this.InvokeAsync("CheckConnection", new object[0], this.CheckConnectionOperationCompleted, userState);
        }
        
        private void OnCheckConnectionOperationCompleted(object arg) {
            if ((this.CheckConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckConnectionCompleted(this, new CheckConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFltNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFltNo(string DepartureDate) {
            object[] results = this.Invoke("GetFltNo", new object[] {
                        DepartureDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFltNoAsync(string DepartureDate) {
            this.GetFltNoAsync(DepartureDate, null);
        }
        
        /// <remarks/>
        public void GetFltNoAsync(string DepartureDate, object userState) {
            if ((this.GetFltNoOperationCompleted == null)) {
                this.GetFltNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFltNoOperationCompleted);
            }
            this.InvokeAsync("GetFltNo", new object[] {
                        DepartureDate}, this.GetFltNoOperationCompleted, userState);
        }
        
        private void OnGetFltNoOperationCompleted(object arg) {
            if ((this.GetFltNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFltNoCompleted(this, new GetFltNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPnrHANByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllPnrHANByDate(string DepartureDate) {
            object[] results = this.Invoke("GetAllPnrHANByDate", new object[] {
                        DepartureDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPnrHANByDateAsync(string DepartureDate) {
            this.GetAllPnrHANByDateAsync(DepartureDate, null);
        }
        
        /// <remarks/>
        public void GetAllPnrHANByDateAsync(string DepartureDate, object userState) {
            if ((this.GetAllPnrHANByDateOperationCompleted == null)) {
                this.GetAllPnrHANByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPnrHANByDateOperationCompleted);
            }
            this.InvokeAsync("GetAllPnrHANByDate", new object[] {
                        DepartureDate}, this.GetAllPnrHANByDateOperationCompleted, userState);
        }
        
        private void OnGetAllPnrHANByDateOperationCompleted(object arg) {
            if ((this.GetAllPnrHANByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPnrHANByDateCompleted(this, new GetAllPnrHANByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenFullTicketNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InvoiceDetail OpenFullTicketNumber(string PNR, string SignOn, string Passcode, string Suf) {
            object[] results = this.Invoke("OpenFullTicketNumber", new object[] {
                        PNR,
                        SignOn,
                        Passcode,
                        Suf});
            return ((InvoiceDetail)(results[0]));
        }
        
        /// <remarks/>
        public void OpenFullTicketNumberAsync(string PNR, string SignOn, string Passcode, string Suf) {
            this.OpenFullTicketNumberAsync(PNR, SignOn, Passcode, Suf, null);
        }
        
        /// <remarks/>
        public void OpenFullTicketNumberAsync(string PNR, string SignOn, string Passcode, string Suf, object userState) {
            if ((this.OpenFullTicketNumberOperationCompleted == null)) {
                this.OpenFullTicketNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenFullTicketNumberOperationCompleted);
            }
            this.InvokeAsync("OpenFullTicketNumber", new object[] {
                        PNR,
                        SignOn,
                        Passcode,
                        Suf}, this.OpenFullTicketNumberOperationCompleted, userState);
        }
        
        private void OnOpenFullTicketNumberOperationCompleted(object arg) {
            if ((this.OpenFullTicketNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenFullTicketNumberCompleted(this, new OpenFullTicketNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestGetPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestGetPhone(string phone) {
            object[] results = this.Invoke("TestGetPhone", new object[] {
                        phone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestGetPhoneAsync(string phone) {
            this.TestGetPhoneAsync(phone, null);
        }
        
        /// <remarks/>
        public void TestGetPhoneAsync(string phone, object userState) {
            if ((this.TestGetPhoneOperationCompleted == null)) {
                this.TestGetPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestGetPhoneOperationCompleted);
            }
            this.InvokeAsync("TestGetPhone", new object[] {
                        phone}, this.TestGetPhoneOperationCompleted, userState);
        }
        
        private void OnTestGetPhoneOperationCompleted(object arg) {
            if ((this.TestGetPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestGetPhoneCompleted(this, new TestGetPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitBooking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubmitBooking(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN DepartureFlight, FlightVN ReturnFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark) {
            object[] results = this.Invoke("SubmitBooking", new object[] {
                        IsRoundTrip,
                        ListPassengers,
                        DepartureFlight,
                        ReturnFlight,
                        SignOn,
                        Passcode,
                        Suf,
                        Phone,
                        Remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBookingAsync(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN DepartureFlight, FlightVN ReturnFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark) {
            this.SubmitBookingAsync(IsRoundTrip, ListPassengers, DepartureFlight, ReturnFlight, SignOn, Passcode, Suf, Phone, Remark, null);
        }
        
        /// <remarks/>
        public void SubmitBookingAsync(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN DepartureFlight, FlightVN ReturnFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark, object userState) {
            if ((this.SubmitBookingOperationCompleted == null)) {
                this.SubmitBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBookingOperationCompleted);
            }
            this.InvokeAsync("SubmitBooking", new object[] {
                        IsRoundTrip,
                        ListPassengers,
                        DepartureFlight,
                        ReturnFlight,
                        SignOn,
                        Passcode,
                        Suf,
                        Phone,
                        Remark}, this.SubmitBookingOperationCompleted, userState);
        }
        
        private void OnSubmitBookingOperationCompleted(object arg) {
            if ((this.SubmitBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBookingCompleted(this, new SubmitBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitBookingV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubmitBookingV2(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN DepartureFlight, FlightVN ReturnFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark, string Email) {
            object[] results = this.Invoke("SubmitBookingV2", new object[] {
                        IsRoundTrip,
                        ListPassengers,
                        DepartureFlight,
                        ReturnFlight,
                        SignOn,
                        Passcode,
                        Suf,
                        Phone,
                        Remark,
                        Email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBookingV2Async(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN DepartureFlight, FlightVN ReturnFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark, string Email) {
            this.SubmitBookingV2Async(IsRoundTrip, ListPassengers, DepartureFlight, ReturnFlight, SignOn, Passcode, Suf, Phone, Remark, Email, null);
        }
        
        /// <remarks/>
        public void SubmitBookingV2Async(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN DepartureFlight, FlightVN ReturnFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark, string Email, object userState) {
            if ((this.SubmitBookingV2OperationCompleted == null)) {
                this.SubmitBookingV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBookingV2OperationCompleted);
            }
            this.InvokeAsync("SubmitBookingV2", new object[] {
                        IsRoundTrip,
                        ListPassengers,
                        DepartureFlight,
                        ReturnFlight,
                        SignOn,
                        Passcode,
                        Suf,
                        Phone,
                        Remark,
                        Email}, this.SubmitBookingV2OperationCompleted, userState);
        }
        
        private void OnSubmitBookingV2OperationCompleted(object arg) {
            if ((this.SubmitBookingV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBookingV2Completed(this, new SubmitBookingV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OtherCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OtherCommand(string ListCMD, string SignOn, string Passcode, string Suf) {
            object[] results = this.Invoke("OtherCommand", new object[] {
                        ListCMD,
                        SignOn,
                        Passcode,
                        Suf});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OtherCommandAsync(string ListCMD, string SignOn, string Passcode, string Suf) {
            this.OtherCommandAsync(ListCMD, SignOn, Passcode, Suf, null);
        }
        
        /// <remarks/>
        public void OtherCommandAsync(string ListCMD, string SignOn, string Passcode, string Suf, object userState) {
            if ((this.OtherCommandOperationCompleted == null)) {
                this.OtherCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOtherCommandOperationCompleted);
            }
            this.InvokeAsync("OtherCommand", new object[] {
                        ListCMD,
                        SignOn,
                        Passcode,
                        Suf}, this.OtherCommandOperationCompleted, userState);
        }
        
        private void OnOtherCommandOperationCompleted(object arg) {
            if ((this.OtherCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OtherCommandCompleted(this, new OtherCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitBookingMulti", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubmitBookingMulti(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN[] ListFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark) {
            object[] results = this.Invoke("SubmitBookingMulti", new object[] {
                        IsRoundTrip,
                        ListPassengers,
                        ListFlight,
                        SignOn,
                        Passcode,
                        Suf,
                        Phone,
                        Remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBookingMultiAsync(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN[] ListFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark) {
            this.SubmitBookingMultiAsync(IsRoundTrip, ListPassengers, ListFlight, SignOn, Passcode, Suf, Phone, Remark, null);
        }
        
        /// <remarks/>
        public void SubmitBookingMultiAsync(bool IsRoundTrip, PassengerVN[] ListPassengers, FlightVN[] ListFlight, string SignOn, string Passcode, string Suf, string Phone, string Remark, object userState) {
            if ((this.SubmitBookingMultiOperationCompleted == null)) {
                this.SubmitBookingMultiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBookingMultiOperationCompleted);
            }
            this.InvokeAsync("SubmitBookingMulti", new object[] {
                        IsRoundTrip,
                        ListPassengers,
                        ListFlight,
                        SignOn,
                        Passcode,
                        Suf,
                        Phone,
                        Remark}, this.SubmitBookingMultiOperationCompleted, userState);
        }
        
        private void OnSubmitBookingMultiOperationCompleted(object arg) {
            if ((this.SubmitBookingMultiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBookingMultiCompleted(this, new SubmitBookingMultiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IssueTicket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IssueTicket(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber) {
            object[] results = this.Invoke("IssueTicket", new object[] {
                        Pnr,
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IssueTicketAsync(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber) {
            this.IssueTicketAsync(Pnr, SignOn, Passcode, Suf, HardcopyPrinterAddress, TicketPrinterAddress, TicketPrintRoutine, StationNumber, null);
        }
        
        /// <remarks/>
        public void IssueTicketAsync(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, object userState) {
            if ((this.IssueTicketOperationCompleted == null)) {
                this.IssueTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIssueTicketOperationCompleted);
            }
            this.InvokeAsync("IssueTicket", new object[] {
                        Pnr,
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber}, this.IssueTicketOperationCompleted, userState);
        }
        
        private void OnIssueTicketOperationCompleted(object arg) {
            if ((this.IssueTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IssueTicketCompleted(this, new IssueTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IssueTicketCA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IssueTicketCA(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string CANumber) {
            object[] results = this.Invoke("IssueTicketCA", new object[] {
                        Pnr,
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber,
                        CANumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IssueTicketCAAsync(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string CANumber) {
            this.IssueTicketCAAsync(Pnr, SignOn, Passcode, Suf, HardcopyPrinterAddress, TicketPrinterAddress, TicketPrintRoutine, StationNumber, CANumber, null);
        }
        
        /// <remarks/>
        public void IssueTicketCAAsync(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string CANumber, object userState) {
            if ((this.IssueTicketCAOperationCompleted == null)) {
                this.IssueTicketCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIssueTicketCAOperationCompleted);
            }
            this.InvokeAsync("IssueTicketCA", new object[] {
                        Pnr,
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber,
                        CANumber}, this.IssueTicketCAOperationCompleted, userState);
        }
        
        private void OnIssueTicketCAOperationCompleted(object arg) {
            if ((this.IssueTicketCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IssueTicketCACompleted(this, new IssueTicketCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CloseReport(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber) {
            object[] results = this.Invoke("CloseReport", new object[] {
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseReportAsync(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber) {
            this.CloseReportAsync(SignOn, Passcode, Suf, HardcopyPrinterAddress, TicketPrinterAddress, TicketPrintRoutine, StationNumber, null);
        }
        
        /// <remarks/>
        public void CloseReportAsync(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, object userState) {
            if ((this.CloseReportOperationCompleted == null)) {
                this.CloseReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseReportOperationCompleted);
            }
            this.InvokeAsync("CloseReport", new object[] {
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber}, this.CloseReportOperationCompleted, userState);
        }
        
        private void OnCloseReportOperationCompleted(object arg) {
            if ((this.CloseReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseReportCompleted(this, new CloseReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenTodayReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenTodayReport(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber) {
            object[] results = this.Invoke("OpenTodayReport", new object[] {
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenTodayReportAsync(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber) {
            this.OpenTodayReportAsync(SignOn, Passcode, Suf, HardcopyPrinterAddress, TicketPrinterAddress, TicketPrintRoutine, StationNumber, null);
        }
        
        /// <remarks/>
        public void OpenTodayReportAsync(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, object userState) {
            if ((this.OpenTodayReportOperationCompleted == null)) {
                this.OpenTodayReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenTodayReportOperationCompleted);
            }
            this.InvokeAsync("OpenTodayReport", new object[] {
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber}, this.OpenTodayReportOperationCompleted, userState);
        }
        
        private void OnOpenTodayReportOperationCompleted(object arg) {
            if ((this.OpenTodayReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenTodayReportCompleted(this, new OpenTodayReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenReportByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenReportByDate(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string datetocheck) {
            object[] results = this.Invoke("OpenReportByDate", new object[] {
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber,
                        datetocheck});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenReportByDateAsync(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string datetocheck) {
            this.OpenReportByDateAsync(SignOn, Passcode, Suf, HardcopyPrinterAddress, TicketPrinterAddress, TicketPrintRoutine, StationNumber, datetocheck, null);
        }
        
        /// <remarks/>
        public void OpenReportByDateAsync(string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string datetocheck, object userState) {
            if ((this.OpenReportByDateOperationCompleted == null)) {
                this.OpenReportByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenReportByDateOperationCompleted);
            }
            this.InvokeAsync("OpenReportByDate", new object[] {
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber,
                        datetocheck}, this.OpenReportByDateOperationCompleted, userState);
        }
        
        private void OnOpenReportByDateOperationCompleted(object arg) {
            if ((this.OpenReportByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenReportByDateCompleted(this, new OpenReportByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VoidTicket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VoidTicket(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string cmd) {
            object[] results = this.Invoke("VoidTicket", new object[] {
                        Pnr,
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber,
                        cmd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VoidTicketAsync(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string cmd) {
            this.VoidTicketAsync(Pnr, SignOn, Passcode, Suf, HardcopyPrinterAddress, TicketPrinterAddress, TicketPrintRoutine, StationNumber, cmd, null);
        }
        
        /// <remarks/>
        public void VoidTicketAsync(string Pnr, string SignOn, string Passcode, string Suf, string HardcopyPrinterAddress, string TicketPrinterAddress, string TicketPrintRoutine, string StationNumber, string cmd, object userState) {
            if ((this.VoidTicketOperationCompleted == null)) {
                this.VoidTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidTicketOperationCompleted);
            }
            this.InvokeAsync("VoidTicket", new object[] {
                        Pnr,
                        SignOn,
                        Passcode,
                        Suf,
                        HardcopyPrinterAddress,
                        TicketPrinterAddress,
                        TicketPrintRoutine,
                        StationNumber,
                        cmd}, this.VoidTicketOperationCompleted, userState);
        }
        
        private void OnVoidTicketOperationCompleted(object arg) {
            if ((this.VoidTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidTicketCompleted(this, new VoidTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenFullBooking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenFullBooking(string PNR, string SignOn, string Passcode, string Suf) {
            object[] results = this.Invoke("OpenFullBooking", new object[] {
                        PNR,
                        SignOn,
                        Passcode,
                        Suf});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenFullBookingAsync(string PNR, string SignOn, string Passcode, string Suf) {
            this.OpenFullBookingAsync(PNR, SignOn, Passcode, Suf, null);
        }
        
        /// <remarks/>
        public void OpenFullBookingAsync(string PNR, string SignOn, string Passcode, string Suf, object userState) {
            if ((this.OpenFullBookingOperationCompleted == null)) {
                this.OpenFullBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenFullBookingOperationCompleted);
            }
            this.InvokeAsync("OpenFullBooking", new object[] {
                        PNR,
                        SignOn,
                        Passcode,
                        Suf}, this.OpenFullBookingOperationCompleted, userState);
        }
        
        private void OnOpenFullBookingOperationCompleted(object arg) {
            if ((this.OpenFullBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenFullBookingCompleted(this, new OpenFullBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OpenFullWPP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OpenFullWPP(string PNR, string SignOn, string Passcode, string Suf) {
            object[] results = this.Invoke("OpenFullWPP", new object[] {
                        PNR,
                        SignOn,
                        Passcode,
                        Suf});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OpenFullWPPAsync(string PNR, string SignOn, string Passcode, string Suf) {
            this.OpenFullWPPAsync(PNR, SignOn, Passcode, Suf, null);
        }
        
        /// <remarks/>
        public void OpenFullWPPAsync(string PNR, string SignOn, string Passcode, string Suf, object userState) {
            if ((this.OpenFullWPPOperationCompleted == null)) {
                this.OpenFullWPPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenFullWPPOperationCompleted);
            }
            this.InvokeAsync("OpenFullWPP", new object[] {
                        PNR,
                        SignOn,
                        Passcode,
                        Suf}, this.OpenFullWPPOperationCompleted, userState);
        }
        
        private void OnOpenFullWPPOperationCompleted(object arg) {
            if ((this.OpenFullWPPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenFullWPPCompleted(this, new OpenFullWPPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class Authentication : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PassengerVN {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string typeField;
        
        private bool genderField;
        
        private System.DateTime birthdayField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InvoiceDetail {
        
        private int invoiceDetailIDField;
        
        private string ticketNoField;
        
        private int ticketTypeField;
        
        private string tripCodeField;
        
        private int ticketFareField;
        
        private int ticketVATField;
        
        private int ticketTaxField;
        
        private int ticketTaxGlobalField;
        
        private int realPayField;
        
        private int ticketPriceField;
        
        private string vCRDisplayField;
        
        private bool updateSystemField;
        
        private string airlineField;
        
        private int invoiceIDField;
        
        private string pNRCodeField;
        
        private string paxNameField;
        
        private int agentIDField;
        
        private int agentBranchIDField;
        
        private System.DateTime updateTimeField;
        
        private System.DateTime soldDateField;
        
        private int otherFeesField;
        
        private int returnFeesField;
        
        private string changeTicketField;
        
        private int changeLevelFeeField;
        
        private int changeLevelFeeVATField;
        
        private string noteField;
        
        private int agentFeeField;
        
        private int agentFeeVATField;
        
        /// <remarks/>
        public int InvoiceDetailID {
            get {
                return this.invoiceDetailIDField;
            }
            set {
                this.invoiceDetailIDField = value;
            }
        }
        
        /// <remarks/>
        public string TicketNo {
            get {
                return this.ticketNoField;
            }
            set {
                this.ticketNoField = value;
            }
        }
        
        /// <remarks/>
        public int TicketType {
            get {
                return this.ticketTypeField;
            }
            set {
                this.ticketTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TripCode {
            get {
                return this.tripCodeField;
            }
            set {
                this.tripCodeField = value;
            }
        }
        
        /// <remarks/>
        public int TicketFare {
            get {
                return this.ticketFareField;
            }
            set {
                this.ticketFareField = value;
            }
        }
        
        /// <remarks/>
        public int TicketVAT {
            get {
                return this.ticketVATField;
            }
            set {
                this.ticketVATField = value;
            }
        }
        
        /// <remarks/>
        public int TicketTax {
            get {
                return this.ticketTaxField;
            }
            set {
                this.ticketTaxField = value;
            }
        }
        
        /// <remarks/>
        public int TicketTaxGlobal {
            get {
                return this.ticketTaxGlobalField;
            }
            set {
                this.ticketTaxGlobalField = value;
            }
        }
        
        /// <remarks/>
        public int RealPay {
            get {
                return this.realPayField;
            }
            set {
                this.realPayField = value;
            }
        }
        
        /// <remarks/>
        public int TicketPrice {
            get {
                return this.ticketPriceField;
            }
            set {
                this.ticketPriceField = value;
            }
        }
        
        /// <remarks/>
        public string VCRDisplay {
            get {
                return this.vCRDisplayField;
            }
            set {
                this.vCRDisplayField = value;
            }
        }
        
        /// <remarks/>
        public bool UpdateSystem {
            get {
                return this.updateSystemField;
            }
            set {
                this.updateSystemField = value;
            }
        }
        
        /// <remarks/>
        public string Airline {
            get {
                return this.airlineField;
            }
            set {
                this.airlineField = value;
            }
        }
        
        /// <remarks/>
        public int InvoiceID {
            get {
                return this.invoiceIDField;
            }
            set {
                this.invoiceIDField = value;
            }
        }
        
        /// <remarks/>
        public string PNRCode {
            get {
                return this.pNRCodeField;
            }
            set {
                this.pNRCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PaxName {
            get {
                return this.paxNameField;
            }
            set {
                this.paxNameField = value;
            }
        }
        
        /// <remarks/>
        public int AgentID {
            get {
                return this.agentIDField;
            }
            set {
                this.agentIDField = value;
            }
        }
        
        /// <remarks/>
        public int AgentBranchID {
            get {
                return this.agentBranchIDField;
            }
            set {
                this.agentBranchIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SoldDate {
            get {
                return this.soldDateField;
            }
            set {
                this.soldDateField = value;
            }
        }
        
        /// <remarks/>
        public int OtherFees {
            get {
                return this.otherFeesField;
            }
            set {
                this.otherFeesField = value;
            }
        }
        
        /// <remarks/>
        public int ReturnFees {
            get {
                return this.returnFeesField;
            }
            set {
                this.returnFeesField = value;
            }
        }
        
        /// <remarks/>
        public string ChangeTicket {
            get {
                return this.changeTicketField;
            }
            set {
                this.changeTicketField = value;
            }
        }
        
        /// <remarks/>
        public int ChangeLevelFee {
            get {
                return this.changeLevelFeeField;
            }
            set {
                this.changeLevelFeeField = value;
            }
        }
        
        /// <remarks/>
        public int ChangeLevelFeeVAT {
            get {
                return this.changeLevelFeeVATField;
            }
            set {
                this.changeLevelFeeVATField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public int AgentFee {
            get {
                return this.agentFeeField;
            }
            set {
                this.agentFeeField = value;
            }
        }
        
        /// <remarks/>
        public int AgentFeeVAT {
            get {
                return this.agentFeeVATField;
            }
            set {
                this.agentFeeVATField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FlightVN {
        
        private int indexField;
        
        private string airCraftField;
        
        private string fltNumbField;
        
        private string startPtField;
        
        private string endPtField;
        
        private System.DateTime startDtField;
        
        private System.DateTime endDtField;
        
        private string classField;
        
        private int numbOfSeatField;
        
        private double fareAdtField;
        
        private double fareChdField;
        
        private double fareInfField;
        
        private double taxAdtField;
        
        private double taxChdField;
        
        private double taxInfField;
        
        private double feeAdtField;
        
        private double feeChdField;
        
        private double feeInfField;
        
        private double priceAdtField;
        
        private double priceChdField;
        
        private double priceInfField;
        
        private string signInField;
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public string AirCraft {
            get {
                return this.airCraftField;
            }
            set {
                this.airCraftField = value;
            }
        }
        
        /// <remarks/>
        public string FltNumb {
            get {
                return this.fltNumbField;
            }
            set {
                this.fltNumbField = value;
            }
        }
        
        /// <remarks/>
        public string StartPt {
            get {
                return this.startPtField;
            }
            set {
                this.startPtField = value;
            }
        }
        
        /// <remarks/>
        public string EndPt {
            get {
                return this.endPtField;
            }
            set {
                this.endPtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDt {
            get {
                return this.startDtField;
            }
            set {
                this.startDtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDt {
            get {
                return this.endDtField;
            }
            set {
                this.endDtField = value;
            }
        }
        
        /// <remarks/>
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public int NumbOfSeat {
            get {
                return this.numbOfSeatField;
            }
            set {
                this.numbOfSeatField = value;
            }
        }
        
        /// <remarks/>
        public double FareAdt {
            get {
                return this.fareAdtField;
            }
            set {
                this.fareAdtField = value;
            }
        }
        
        /// <remarks/>
        public double FareChd {
            get {
                return this.fareChdField;
            }
            set {
                this.fareChdField = value;
            }
        }
        
        /// <remarks/>
        public double FareInf {
            get {
                return this.fareInfField;
            }
            set {
                this.fareInfField = value;
            }
        }
        
        /// <remarks/>
        public double TaxAdt {
            get {
                return this.taxAdtField;
            }
            set {
                this.taxAdtField = value;
            }
        }
        
        /// <remarks/>
        public double TaxChd {
            get {
                return this.taxChdField;
            }
            set {
                this.taxChdField = value;
            }
        }
        
        /// <remarks/>
        public double TaxInf {
            get {
                return this.taxInfField;
            }
            set {
                this.taxInfField = value;
            }
        }
        
        /// <remarks/>
        public double FeeAdt {
            get {
                return this.feeAdtField;
            }
            set {
                this.feeAdtField = value;
            }
        }
        
        /// <remarks/>
        public double FeeChd {
            get {
                return this.feeChdField;
            }
            set {
                this.feeChdField = value;
            }
        }
        
        /// <remarks/>
        public double FeeInf {
            get {
                return this.feeInfField;
            }
            set {
                this.feeInfField = value;
            }
        }
        
        /// <remarks/>
        public double PriceAdt {
            get {
                return this.priceAdtField;
            }
            set {
                this.priceAdtField = value;
            }
        }
        
        /// <remarks/>
        public double PriceChd {
            get {
                return this.priceChdField;
            }
            set {
                this.priceChdField = value;
            }
        }
        
        /// <remarks/>
        public double PriceInf {
            get {
                return this.priceInfField;
            }
            set {
                this.priceInfField = value;
            }
        }
        
        /// <remarks/>
        public string SignIn {
            get {
                return this.signInField;
            }
            set {
                this.signInField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SearchFlightAutoCompletedEventHandler(object sender, SearchFlightAutoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchFlightAutoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchFlightAutoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlightVN[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlightVN[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SearchFlightCompletedEventHandler(object sender, SearchFlightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchFlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchFlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlightVN[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlightVN[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SearchFlightAEPCompletedEventHandler(object sender, SearchFlightAEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchFlightAEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchFlightAEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlightVN[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlightVN[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OpenBookingAutoCompletedEventHandler(object sender, OpenBookingAutoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenBookingAutoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenBookingAutoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFlightServiceCompletedEventHandler(object sender, GetFlightServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllPnrByFltCompletedEventHandler(object sender, GetAllPnrByFltCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPnrByFltCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPnrByFltCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckConnectionCompletedEventHandler(object sender, CheckConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFltNoCompletedEventHandler(object sender, GetFltNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFltNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFltNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllPnrHANByDateCompletedEventHandler(object sender, GetAllPnrHANByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPnrHANByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPnrHANByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OpenFullTicketNumberCompletedEventHandler(object sender, OpenFullTicketNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenFullTicketNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenFullTicketNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InvoiceDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InvoiceDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TestGetPhoneCompletedEventHandler(object sender, TestGetPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestGetPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestGetPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SubmitBookingCompletedEventHandler(object sender, SubmitBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SubmitBookingV2CompletedEventHandler(object sender, SubmitBookingV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBookingV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBookingV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OtherCommandCompletedEventHandler(object sender, OtherCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OtherCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OtherCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SubmitBookingMultiCompletedEventHandler(object sender, SubmitBookingMultiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBookingMultiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBookingMultiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IssueTicketCompletedEventHandler(object sender, IssueTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IssueTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IssueTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IssueTicketCACompletedEventHandler(object sender, IssueTicketCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IssueTicketCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IssueTicketCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CloseReportCompletedEventHandler(object sender, CloseReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OpenTodayReportCompletedEventHandler(object sender, OpenTodayReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenTodayReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenTodayReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OpenReportByDateCompletedEventHandler(object sender, OpenReportByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenReportByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenReportByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VoidTicketCompletedEventHandler(object sender, VoidTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoidTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoidTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OpenFullBookingCompletedEventHandler(object sender, OpenFullBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenFullBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenFullBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void OpenFullWPPCompletedEventHandler(object sender, OpenFullWPPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenFullWPPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenFullWPPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591